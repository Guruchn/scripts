#!groovy

pipeline {

  parameters {
      string(name: "SLAVE_TARGET", defaultValue: "master", description: "slave machine that responsible to execute tasks")
	  string(name: "GIT_GOAL", defaultValue: "clone", description: "")
	  string(name: "GIT_REPO", defaultValue: "https://github.com/penumalla/appcode.git", description: "")
	  string(name: "GIT_BRANCH", defaultValue: "master", description: "")
	  string(name: "MVN_GOAL", defaultValue: "install", description: "")
	  string(name: "MVN_PROP", defaultValue: "-DskipTests", description: "")
	  
  }
  
   agent { label "${SLAVE_TARGET}" }
   
   environment {
     GIT_CREDENTIAL = credentials("git")
   }
   
   stages {
      stage("scm-clone") {
	   when {
	      environment name: "GIT_GOAL", value: "clone"
	   }
	   steps {
	     script {
		   dir("D:/pipeline/rm"){
		     deleteDir()
		   }
		   if ("${GIT_BRANCH}" != ""){
		     bat("git clone -b ${GIT_BRANCH} http://${GIT_CREDENTIAL}@${GIT_REPO}")
		   
		   }
		   else {
		     bat("git clone http://$GET_CREDENTIAL)@${GIT_REPO}")
		   }
		 }
	   }
	  }
	  stage("SCM-Checkout") {
	    when {
		  environment name: "GIT_GOAL", value: "checkout"
		}
		steps {
		  dir("D:/pipeline/rm") {
		    bat("git clean -fd")
		    bat("git pull origin master")
		    //bat("git pull")
		  }
		}
	  }
   }

}